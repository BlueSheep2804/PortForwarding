plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'com.google.osdetector' version '1.7.3'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
    id 'com.gradleup.shadow' version '8.3.5'
    id 'org.jetbrains.kotlin.plugin.serialization' version "1.8.21"
}

group = 'io.github.bluesheep2804'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT"

    implementation "com.github.alexdlaird:java-ngrok:2.3.4"
    implementation "com.charleskorn.kaml:kaml:0.54.0"
}

tasks {
    runServer {
        minecraftVersion('1.20.4')
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
